---
- name:
    Initialize user service directory
  file:
    path: '{{ user_service_dir }}'
    state: directory
  when: _self.scope == 'user'
  tags: systemd-systemd-service

# https://www.freedesktop.org/software/systemd/man/journald.conf.html#Options
- name:
    Init journal directory
  file:
    path: /var/log/journal
    state: directory
  become: yes
  tags: systemd-systemd-service

- name: Determine full path of the exec
  command: which {{ _self.exec.split() | first }}
  register: which_exec
  when: not _self.exec.startswith('/')

- name: Build ExecStart stanza from executable path and arguments
  vars:
    args: '{{ _self.exec.split()[1:] }}'
  set_fact:
    exec_start: '{{ which_exec.stdout }} {{ " ".join(args) }}'
  when: not _self.exec.startswith('/')

- name: Set ExecStart stanza
  set_fact:
    exec_start: '{{ _self.exec }}'
  when: _self.exec.startswith('/')

- name: Fill in system service template
  template:
    src: systemd.service.j2
    dest: '{{ systemd_service_dir }}/{{ _self.name }}.service'
  when: _self.scope != 'user'
  become: yes
  tags: systemd-service

- name: Fill in user service template
  template:
    src: systemd.service.j2
    dest: '{{ user_service_dir }}/{{ _self.name }}.service'
  when: _self.scope == 'user'
  tags: systemd-service

- name:
    Enable the service
  systemd:
    daemon-reload: yes
    name: '{{ _self.name }}'
    scope: '{{ _self.scope }}'
    enabled: '{{ _self.enable }}'
  become: '{{ _config.become }}'
  when: not _self.instance
  tags:
    systemd-service

- name:
    Enable the service for instance
  systemd:
    daemon-reload: yes
    name: '{{ _self.name }}{{ _self.instance }}'
    scope: '{{ _self.scope }}'
    enabled: yes
  become: '{{ _config.become }}'
  when: _self.instance
  tags:
    systemd-service

- name:
    Start the service
  systemd:
    daemon-reload: yes
    name: '{{ _self.name }}'
    scope: '{{ _self.scope }}'
    state: restarted
    enabled: yes
  become: '{{ _config.become }}'
  when: _self.start
  tags:
    systemd-service
...
